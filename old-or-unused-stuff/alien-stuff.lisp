;;
 ;; from unistd.h
 ;;

(define-alien-routine "sysconf" long
  (name int))

 ;; sysconf constants
 (:integer SC-AIO-LISTIO-MAX "_SC_AIO_LISTIO_MAX")
 (:integer SC-AIO-MAX "_SC_AIO_MAX")
 (:integer SC-AIO-PRIO-DELTA-MAX "_SC_AIO_PRIO_DELTA_MAX")
 (:integer SC-ARG-MAX "_SC_ARG_MAX")
 (:integer SC-ATEXIT-MAX "_SC_ATEXIT_MAX")
 (:integer SC-BC-BASE-MAX "_SC_BC_BASE_MAX")
 (:integer SC-BC-DIM-MAX "_SC_BC_DIM_MAX")
 (:integer SC-BC-SCALE-MAX "_SC_BC_SCALE_MAX")
 (:integer SC-BC-STRING-MAX "_SC_BC_STRING_MAX")
 (:integer SC-CHILD-MAX "_SC_CHILD_MAX")
 (:integer SC-CLK-TCK "_SC_CLK_TCK")
 (:integer SC-COLL-WEIGHTS-MAX "_SC_COLL_WEIGHTS_MAX")
 (:integer SC-DELAYTIMER-MAX "_SC_DELAYTIMER_MAX")
 (:integer SC-EXPR-NEST-MAX "_SC_EXPR_NEST_MAX")
 (:integer SC-HOST-NAME-MAX "_SC_HOST_NAME_MAX")
 (:integer SC-IOV-MAX "_SC_IOV_MAX")
 (:integer SC-LINE-MAX "_SC_LINE_MAX")
 (:integer SC-LOGIN-NAME-MAX "_SC_LOGIN_NAME_MAX")
 (:integer SC-NGROUPS-MAX "_SC_NGROUPS_MAX")
 (:integer SC-GETGR-R-SIZE-MAX "_SC_GETGR_R_SIZE_MAX")
 (:integer SC-GETPW-R-SIZE-MAX "_SC_GETPW_R_SIZE_MAX")
 (:integer SC-MQ-OPEN-MAX "_SC_MQ_OPEN_MAX")
 (:integer SC-MQ-PRIO-MAX "_SC_MQ_PRIO_MAX")
 (:integer SC-OPEN-MAX "_SC_OPEN_MAX")
 (:integer SC-ADVISORY-INFO "_SC_ADVISORY_INFO")
 (:integer SC-BARRIERS "_SC_BARRIERS")
 (:integer SC-ASYNCHRONOUS-IO "_SC_ASYNCHRONOUS_IO")
 (:integer SC-CLOCK-SELECTION "_SC_CLOCK_SELECTION")
 (:integer SC-CPUTIME "_SC_CPUTIME")
 (:integer SC-FILE-LOCKING "_SC_FILE_LOCKING")
 (:integer SC-FSYNC "_SC_FSYNC")
 (:integer SC-IPV6 "_SC_IPV6")
 (:integer SC-JOB-CONTROL "_SC_JOB_CONTROL")
 (:integer SC-MAPPED-FILES "_SC_MAPPED_FILES")
 (:integer SC-MEMLOCK "_SC_MEMLOCK")
 (:integer SC-MEMLOCK-RANGE "_SC_MEMLOCK_RANGE")
 (:integer SC-MEMORY-PROTECTION "_SC_MEMORY_PROTECTION")
 (:integer SC-MESSAGE-PASSING "_SC_MESSAGE_PASSING")
 (:integer SC-MONOTONIC-CLOCK "_SC_MONOTONIC_CLOCK")
 (:integer SC-MULTI-PROCESS "_SC_MULTI_PROCESS")
 (:integer SC-PRIORITIZED-IO "_SC_PRIORITIZED_IO")
 (:integer SC-PRIORITY-SCHEDULING "_SC_PRIORITY_SCHEDULING")
 (:integer SC-RAW-SOCKETS "_SC_RAW_SOCKETS")
 (:integer SC-READER-WRITER-LOCKS "_SC_READER_WRITER_LOCKS")
 (:integer SC-REALTIME-SIGNALS "_SC_REALTIME_SIGNALS")
 (:integer SC-REGEXP "_SC_REGEXP")
 (:integer SC-SAVED-IDS "_SC_SAVED_IDS")
 (:integer SC-SEMAPHORES "_SC_SEMAPHORES")
 (:integer SC-SHARED-MEMORY-OBJECTS "_SC_SHARED_MEMORY_OBJECTS")
 (:integer SC-SHELL "_SC_SHELL")
 (:integer SC-SPAWN "_SC_SPAWN")
 (:integer SC-SPIN-LOCKS "_SC_SPIN_LOCKS")
 (:integer SC-SPORADIC-SERVER "_SC_SPORADIC_SERVER")
 (:integer SC-SYMLOOP-MAX "_SC_SYMLOOP_MAX")
 (:integer SC-SYNCHRONIZED-IO "_SC_SYNCHRONIZED_IO")
 (:integer SC-THREAD-ATTR-STACKADDR "_SC_THREAD_ATTR_STACKADDR")
 (:integer SC-THREAD-ATTR-STACKSIZE "_SC_THREAD_ATTR_STACKSIZE")
 (:integer SC-THREAD-CPUTIME "_SC_THREAD_CPUTIME")
 (:integer SC-THREAD-PRIO-INHERIT "_SC_THREAD_PRIO_INHERIT")
 (:integer SC-THREAD-PRIO-PROTECT "_SC_THREAD_PRIO_PROTECT")
 (:integer SC-THREAD-PRIORITY-SCHEDULING "_SC_THREAD_PRIORITY_SCHEDULING")
 (:integer SC-THREAD-PROCESS-SHARED "_SC_THREAD_PROCESS_SHARED")
 (:integer SC-THREAD-SAFE-FUNCTIONS "_SC_THREAD_SAFE_FUNCTIONS")
 (:integer SC-THREAD-SPORADIC-SERVER "_SC_THREAD_SPORADIC_SERVER")
 (:integer SC-THREADS "_SC_THREADS")
 (:integer SC-TIMEOUTS "_SC_TIMEOUTS")
 (:integer SC-TIMERS "_SC_TIMERS")
 (:integer SC-TRACE "_SC_TRACE")
 (:integer SC-TRACE-EVENT-FILTER "_SC_TRACE_EVENT_FILTER")
 (:integer SC-TRACE-INHERIT "_SC_TRACE_INHERIT")
 (:integer SC-TRACE-LOG "_SC_TRACE_LOG")
 (:integer SC-TYPED-MEMORY-OBJECTS "_SC_TYPED_MEMORY_OBJECTS")
 (:integer SC-VERSION "_SC_VERSION")
 (:integer SC-V6-ILP32-OFF32 "_SC_V6_ILP32_OFF32")
 (:integer SC-V6-ILP32-OFFBIG "_SC_V6_ILP32_OFFBIG")
 (:integer SC-V6-LP64-OFF64 "_SC_V6_LP64_OFF64")
 (:integer SC-V6-LPBIG-OFFBIG "_SC_V6_LPBIG_OFFBIG")
 (:integer SC-2-C-BIND "_SC_2_C_BIND")
 (:integer SC-2-C-DEV "_SC_2_C_DEV")
 (:integer SC-2-C-VERSION "_SC_2_C_VERSION")
 (:integer SC-2-CHAR-TERM "_SC_2_CHAR_TERM")
 (:integer SC-2-FORT-DEV "_SC_2_FORT_DEV")
 (:integer SC-2-FORT-RUN "_SC_2_FORT_RUN")
 (:integer SC-2-LOCALEDEF "_SC_2_LOCALEDEF")
 (:integer SC-2-PBS "_SC_2_PBS")
 (:integer SC-2-PBS-ACCOUNTING "_SC_2_PBS_ACCOUNTING")
 (:integer SC-2-PBS-CHECKPOINT "_SC_2_PBS_CHECKPOINT")
 (:integer SC-2-PBS-LOCATE "_SC_2_PBS_LOCATE")
 (:integer SC-2-PBS-MESSAGE "_SC_2_PBS_MESSAGE")
 (:integer SC-2-PBS-TRACK "_SC_2_PBS_TRACK")
 (:integer SC-2-SW-DEV "_SC_2_SW_DEV")
 (:integer SC-2-UPE "_SC_2_UPE")
 (:integer SC-2-VERSION "_SC_2_VERSION")
 (:integer SC-REGEX-VERSION "_SC_REGEX_VERSION")
 (:integer SC-PAGE-SIZE "_SC_PAGE_SIZE")
 (:integer SC-PAGESIZE "_SC_PAGESIZE")
 (:integer SC-THREAD-DESTRUCTOR-ITERATIONS "_SC_THREAD_DESTRUCTOR_ITERATIONS")
 (:integer SC-THREAD-KEYS-MAX "_SC_THREAD_KEYS_MAX")
 (:integer SC-THREAD-STACK-MIN "_SC_THREAD_STACK_MIN")
 (:integer SC-THREAD-THREADS-MAX "_SC_THREAD_THREADS_MAX")
 (:integer SC-RE-DUP-MAX "_SC_RE_DUP_MAX")
 (:integer SC-RTSIG-MAX "_SC_RTSIG_MAX")
 (:integer SC-SEM-NSEMS-MAX "_SC_SEM_NSEMS_MAX")
 (:integer SC-SEM-VALUE-MAX "_SC_SEM_VALUE_MAX")
 (:integer SC-SIGQUEUE-MAX "_SC_SIGQUEUE_MAX")
 (:integer SC-STREAM-MAX "_SC_STREAM_MAX")
 (:integer SC-SYMLOOP-MAX "_SC_SYMLOOP_MAX")
 (:integer SC-TIMER-MAX "_SC_TIMER_MAX")
 (:integer SC-TTY-NAME-MAX "_SC_TTY_NAME_MAX")
 (:integer SC-TZNAME-MAX "_SC_TZNAME_MAX")
 (:integer SC-XBS5-ILP32-OFF32 "_SC_XBS5_ILP32_OFF32")
 (:integer SC-XBS5-ILP32-OFFBIG "_SC_XBS5_ILP32_OFFBIG")
 (:integer SC-XBS5-LP64-OFF64 "_SC_XBS5_LP64_OFF64")
 (:integer SC-XBS5-LPBIG-OFFBIG "_SC_XBS5_LPBIG_OFFBIG")
 (:integer SC-XOPEN-CRYPT "_SC_XOPEN_CRYPT")
 (:integer SC-XOPEN-ENH-I18N "_SC_XOPEN_ENH_I18N")
 (:integer SC-XOPEN-LEGACY "_SC_XOPEN_LEGACY")
 (:integer SC-XOPEN-REALTIME "_SC_XOPEN_REALTIME")
 (:integer SC-XOPEN-REALTIME-THREADS "_SC_XOPEN_REALTIME_THREADS")
 (:integer SC-XOPEN-SHM "_SC_XOPEN_SHM")
 (:integer SC-XOPEN-STREAMS "_SC_XOPEN_STREAMS")
 (:integer SC-XOPEN-UNIX "_SC_XOPEN_UNIX")
 (:integer SC-XOPEN-VERSION "_SC_XOPEN_VERSION")
 (:integer SC-XOPEN-XCU-VERSION "_SC_XOPEN_XCU_VERSION")

 (:integer host-not-found "HOST_NOT_FOUND")
 (:integer no-data "NO_DATA")
 (:integer no-address "NO_ADDRESS")
 (:integer no-recovery "NO_RECOVERY")
 (:integer try-again "TRY_AGAIN")

 (:structure hostent ("struct hostent"
                      (c-string-pointer name "char *" "h_name")
                      ((* c-string) aliases "char **" "h_aliases")
                      (int type "int" "h_addrtype")
                      (int length "int" "h_length")
                      ((* (* (unsigned 8))) addresses "char **" "h_addr_list")))
 (:structure servent ("struct servent"
                       (c-string-pointer name "char *" "s_name")
                       ((* (* (unsigned 8))) aliases "char **" "s_aliases")
                       (int port "int" "s_port")
                       (c-string-pointer proto "char *" "s_proto")))
 (:structure netent ("struct netent"
                     (c-string-pointer name "char *" "n_name")
                     ((* c-string) aliases "char **" "n_aliases")
                     (int type "int" "n_addrtype")
                     (uint32-t net "int" "n_net")))

;; Host lookup
(define-alien-routine "endhostent" void)

(define-alien-routine "gethostbyaddr" (* (struct hostent))
  (addr (* t))
  (len socklen-t)
  (type int))

(define-alien-routine "gethostbyname" (* (struct hostent))
  (name c-string))

(define-alien-routine "gethostent" (* (struct hostent)))

(define-alien-routine "sethostent" void
  (stayopen int))

;; Service lookup
(define-alien-routine "endservent" void)

(define-alien-routine "getservbyport" (* (struct servent))
  (port int)
  (proto c-string))

(define-alien-routine "getservbyname" (* (struct servent))
  (name c-string)
  (proto c-string))

(define-alien-routine "getservent" (* (struct servent)))

(define-alien-routine "setservent" void
  (stayopen int))

;; Net lookup
(define-alien-routine "endnetent" void)

(define-alien-routine "getnetbyaddr" (* (struct netent))
  (net uint32-t)
  (type int))

(define-alien-routine "getnetbyname" (* (struct netent))
  (name c-string))

(define-alien-routine "getnetent" (* (struct netent)))

(define-alien-routine "setnetent" void
  (stayopen int))
